-- EXERCISE 1: SELECT - FROM
SELECT 
    dept_no
FROM
    departments;
    
    -- EXERCISE 2: SELECT - FROM
SELECT 
    *
FROM
    departments;
    
-- EXERCISE 1: WHERE
SELECT 
    *
FROM
    employees
WHERE
    first_name = 'Elvis';
 
 -- EXERCISE 1: AND
SELECT 
    *
FROM
    employees
WHERE
    first_name = 'Kellie' AND gender = 'F';
 
 -- EXERCISE 1: OR
SELECT 
    *
FROM
    employees
WHERE
    first_name = 'Kellie'
        OR first_name = 'Aruna';
  
 -- EXERCISE 1: Operator Precedence
SELECT 
    *
FROM
    employees
WHERE
    gender = 'F' AND (first_name = 'Kellie' OR first_name = 'Aruna');
 
 -- EXERCISE 1: IN / NOT IN    
SELECT 
    *
FROM
    employees
WHERE
    first_name IN ('Denis' , 'Elvis');
    
-- EXERCISE 2: IN / NOT IN 
SELECT 
    *
FROM
    employees
WHERE
    first_name NOT IN ('John' , 'Mark', 'Jacob');
    
 -- EXERCISE 1: LIKE / NOT LIKE 
SELECT 
    *
FROM
    employees
WHERE
    first_name LIKE('Mark%');

SELECT 
    *
FROM
    employees
WHERE
    hire_date LIKE ('%2000%');

SELECT 
    *
FROM
    employees
WHERE
    emp_no LIKE ('1000_');
    
 -- EXERCISE 1: Wildcard Characters
SELECT 
    *
FROM
    employees
WHERE
    first_name LIKE ('%JACK%');

SELECT 
    *
FROM
    employees
WHERE
    first_name NOT LIKE ('%Jack%');
    
 -- EXERCISE 1: BETWEEN - AND
SELECT 
    *
FROM
    salaries;

SELECT 
    *
FROM
    salaries
WHERE
    salary BETWEEN 66000 AND 70000;
    
SELECT 
    *
FROM
    employees
WHERE
    emp_no NOT BETWEEN '10004' AND '10012';
    
SELECT 
    dept_name
FROM
    departments
WHERE
    dept_no BETWEEN 'd003' AND 'd006';
  
-- EXERCISE 1: IS NOT NULL / IS NULL
SELECT 
    dept_name
FROM
    departments
WHERE
    dept_no IS NOT NULL;
    
 -- EXERCISE 1: Other Comparison Operators
SELECT 
    *
FROM
    employees
WHERE
    hire_date >= '2000-01-01'
        AND gender = 'F';
SELECT 
    *
FROM
    salaries
WHERE
    salary > 150000;
    
 -- EXERCISE 1: SELECT DISTINCT
SELECT DISTINCT
    hire_date
FROM
    employees;
    
-- EXERCISE 1: Introduction to Aggregate Functions
SELECT 
    COUNT(*)
FROM
    salaries
WHERE
    salary >= 100000;
    
SELECT 
    COUNT(*)
FROM
    dept_manager;
    
 -- EXERCISE 1: ORDER BY
SELECT 
    *
FROM
    employees
ORDER BY hire_date DESC;

-- EXERCISE 1: GROUP BY

SELECT 
    first_name
FROM
    employees;
    
SELECT 
    first_name
FROM
    employees
GROUP BY first_name;

SELECT DISTINCT
    first_name
FROM
    employees;

SELECT 
    COUNT(first_name)
FROM
    employees
GROUP BY first_name;

SELECT 
    first_name, COUNT(first_name)
FROM
    employees
GROUP BY first_name;

-- EXERCISE 1: Using Aliases (AS)
SELECT 
    salary, COUNT(emp_no) AS emps_with_same_salary
FROM
    salaries
WHERE
    salary > 80000
GROUP BY salary
ORDER BY salary;

-- EXERCISE 1: HAVING
SELECT 
    emp_no, AVG(salary)
FROM
    salaries
GROUP BY emp_no
HAVING AVG(salary) > 120000
ORDER BY emp_no;

-- EXERCISE 1: WHERE vs HAVING - Part II
SELECT 
    emp_no, from_date
FROM
    dept_emp
WHERE
    from_date > '2000-01-01'
GROUP BY emp_no
HAVING COUNT(from_date) > 1
ORDER BY emp_no;

-- EXERCISE 1: LIMIT
SELECT 
    *
FROM
    dept_emp
LIMIT 100;

SELECT 
    first_name, COUNT(first_name)
FROM
    employees
GROUP BY first_name
ORDER BY first_name DESC;
    
